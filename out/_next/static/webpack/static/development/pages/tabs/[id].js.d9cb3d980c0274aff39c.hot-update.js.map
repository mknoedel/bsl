{"version":3,"file":"static/webpack/static/development/pages/tabs/[id].js.d9cb3d980c0274aff39c.hot-update.js","sources":["webpack:///./components/DiscreteSlider.tsx"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport _ from 'lodash';\nimport { IField } from '../interfaces';\nimport { Typography } from '@material-ui/core';\n\ninterface IDiscreteSliderProps {\n  field: IField,\n  idx: number,\n  setValue: (value: number, index: number) => void\n  onKeyPress?: (event: React.KeyboardEvent<HTMLSpanElement>) => void\n  valueDisplay?: boolean\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300,\n  },\n  margin: {\n    height: theme.spacing(2),\n  },\n  marks: {\n    fontSize: '8px',\n  },\n}))\n\nlet marks: any = [\n  {\n    value: 1,\n    label: 'Never',\n  },\n  {\n    value: 2,\n    label: 'Not Much',\n  },\n  {\n    value: 3,\n    label: 'Neutral',\n  },\n  {\n    value: 4,\n    label: 'A Bit',\n  },\n  {\n    value: 5,\n    label: 'Always',\n  }\n];\nlet marksReverse: any = [\n  {\n    value: 5,\n    label: 'Never',\n  },\n  {\n    value: 4,\n    label: 'Not Much',\n  },\n  {\n    value: 3,\n    label: 'Neutral',\n  },\n  {\n    value: 2,\n    label: 'A Bit',\n  },\n  {\n    value: 1,\n    label: 'Always',\n  }\n];\n\nmarks = _.forEach(marks, (c) => c.label = <Typography style={{fontSize: '9px'}}>{c.label}</Typography>)\nmarksReverse = _.forEach(marksReverse, (c) => c.label = <Typography style={{fontSize: '9px'}}>{c.label}</Typography>)\n\nfunction valuetext(value: number): string {\n  return _.find(marks, c => c.value === value)?.label || ''\n}\n\n\nexport default function DiscreteSlider({field, idx, setValue, onKeyPress, valueDisplay}: IDiscreteSliderProps) {\n  const classes = useStyles()\n  let {name, value, flip} = field\n  value = value || 0\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        getAriaValueText={valuetext}\n        ThumbComponent={'span'}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay={valueDisplay ? \"auto\" : \"off\"}\n        id={name}\n        ref={(span: any) => {\n          if (span?.children && onKeyPress) {\n            span.children[span.children.length - 1].focus()\n          }\n        }}\n        value={value}\n        step={1}\n        min={1}\n        max={5}\n        marks={flip ? marksReverse : marks}\n        onChange={(_e, val) => setValue(val as number, idx)}\n        onKeyPress={(e) => {\n          if (onKeyPress) {\n            onKeyPress(e)\n          }\n        }}\n      />\n      <div className={classes.margin} />\n    </div>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAUA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAAA;AAYA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}